// <auto-generated />
using System;
using Drugs_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrugsAPI_New.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DrugsAPI_New.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("DrugsAPI_New.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("ManufacturedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Strength")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pain reliever",
                            DosageForm = "Tablet",
                            ExpiryDate = new DateTime(2026, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6350),
                            Location = "Mumbai",
                            ManufacturedDate = new DateTime(2024, 3, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6329),
                            Manufacturer = "Bayer",
                            Name = "Aspirin",
                            Price = 5.99m,
                            QuantityAvailable = 950,
                            Strength = "325mg",
                            TotalQuantity = 1000
                        },
                        new
                        {
                            Id = 2,
                            Description = "Anti-inflammatory",
                            DosageForm = "Capsule",
                            ExpiryDate = new DateTime(2027, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6358),
                            Location = "Delhi",
                            ManufacturedDate = new DateTime(2024, 4, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6357),
                            Manufacturer = "Advil",
                            Name = "Ibuprofen",
                            Price = 7.99m,
                            QuantityAvailable = 1400,
                            Strength = "200mg",
                            TotalQuantity = 1500
                        },
                        new
                        {
                            Id = 3,
                            Description = "Antibiotic",
                            DosageForm = "Capsule",
                            ExpiryDate = new DateTime(2025, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6361),
                            Location = "Bangalore",
                            ManufacturedDate = new DateTime(2024, 5, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6361),
                            Manufacturer = "Pfizer",
                            Name = "Amoxicillin",
                            Price = 15.99m,
                            QuantityAvailable = 750,
                            Strength = "500mg",
                            TotalQuantity = 800
                        },
                        new
                        {
                            Id = 4,
                            Description = "Blood pressure medication",
                            DosageForm = "Tablet",
                            ExpiryDate = new DateTime(2026, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6365),
                            Location = "Chennai",
                            ManufacturedDate = new DateTime(2024, 6, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6364),
                            Manufacturer = "Merck",
                            Name = "Lisinopril",
                            Price = 12.99m,
                            QuantityAvailable = 1100,
                            Strength = "10mg",
                            TotalQuantity = 1200
                        },
                        new
                        {
                            Id = 5,
                            Description = "Diabetes medication",
                            DosageForm = "Tablet",
                            ExpiryDate = new DateTime(2027, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6368),
                            Location = "Hyderabad",
                            ManufacturedDate = new DateTime(2024, 7, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6367),
                            Manufacturer = "Novartis",
                            Name = "Metformin",
                            Price = 9.99m,
                            QuantityAvailable = 1900,
                            Strength = "500mg",
                            TotalQuantity = 2000
                        },
                        new
                        {
                            Id = 6,
                            Description = "Acid reflux medication",
                            DosageForm = "Capsule",
                            ExpiryDate = new DateTime(2026, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6370),
                            Location = "Kolkata",
                            ManufacturedDate = new DateTime(2024, 8, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6370),
                            Manufacturer = "AstraZeneca",
                            Name = "Omeprazole",
                            Price = 14.99m,
                            QuantityAvailable = 950,
                            Strength = "20mg",
                            TotalQuantity = 1000
                        },
                        new
                        {
                            Id = 7,
                            Description = "Cholesterol medication",
                            DosageForm = "Tablet",
                            ExpiryDate = new DateTime(2025, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6373),
                            Location = "Pune",
                            ManufacturedDate = new DateTime(2024, 2, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6372),
                            Manufacturer = "Lipitor",
                            Name = "Atorvastatin",
                            Price = 18.99m,
                            QuantityAvailable = 1400,
                            Strength = "40mg",
                            TotalQuantity = 1500
                        },
                        new
                        {
                            Id = 8,
                            Description = "Antidepressant",
                            DosageForm = "Tablet",
                            ExpiryDate = new DateTime(2026, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6376),
                            Location = "Ahmedabad",
                            ManufacturedDate = new DateTime(2024, 1, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6375),
                            Manufacturer = "Zoloft",
                            Name = "Sertraline",
                            Price = 16.99m,
                            QuantityAvailable = 900,
                            Strength = "50mg",
                            TotalQuantity = 1000
                        },
                        new
                        {
                            Id = 9,
                            Description = "Asthma inhaler",
                            DosageForm = "Inhaler",
                            ExpiryDate = new DateTime(2025, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6379),
                            Location = "Jaipur",
                            ManufacturedDate = new DateTime(2023, 12, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6378),
                            Manufacturer = "GlaxoSmithKline",
                            Name = "Albuterol",
                            Price = 24.99m,
                            QuantityAvailable = 450,
                            Strength = "90mcg",
                            TotalQuantity = 500
                        });
                });

            modelBuilder.Entity("DrugsAPI_New.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("DrugsAPI_New.Models.MemberPrescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DrugIds")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastRefillDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrescribedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Refills")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MemberPrescriptions");
                });

            modelBuilder.Entity("DrugsAPI_New.Models.MemberSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MemberLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("RefillOccurrence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SubscriptionStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberSubscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 8, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6500),
                            MemberId = "MEMBER1",
                            MemberLocation = "New York",
                            PrescriptionId = 1,
                            RefillOccurrence = "Monthly",
                            StartDate = new DateTime(2024, 8, 22, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6501),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6498),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 7, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6506),
                            MemberId = "MEMBER2",
                            MemberLocation = "Los Angeles",
                            PrescriptionId = 2,
                            RefillOccurrence = "Bi-weekly",
                            StartDate = new DateTime(2024, 7, 23, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6507),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6505),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 6, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6509),
                            MemberId = "MEMBER3",
                            MemberLocation = "Chicago",
                            PrescriptionId = 3,
                            RefillOccurrence = "Weekly",
                            StartDate = new DateTime(2024, 6, 23, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6510),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6508),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 5, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6512),
                            MemberId = "MEMBER4",
                            MemberLocation = "Houston",
                            PrescriptionId = 4,
                            RefillOccurrence = "Monthly",
                            StartDate = new DateTime(2024, 5, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6512),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6511),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 4, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6514),
                            MemberId = "MEMBER5",
                            MemberLocation = "Phoenix",
                            PrescriptionId = 5,
                            RefillOccurrence = "Bi-weekly",
                            StartDate = new DateTime(2024, 4, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6515),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6513),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2025, 3, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6517),
                            MemberId = "MEMBER6",
                            MemberLocation = "Philadelphia",
                            PrescriptionId = 6,
                            RefillOccurrence = "Weekly",
                            StartDate = new DateTime(2024, 3, 25, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6518),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6516),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2025, 2, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6520),
                            MemberId = "MEMBER7",
                            MemberLocation = "San Antonio",
                            PrescriptionId = 7,
                            RefillOccurrence = "Monthly",
                            StartDate = new DateTime(2024, 2, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6520),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6519),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2025, 1, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6522),
                            MemberId = "MEMBER8",
                            MemberLocation = "San Diego",
                            PrescriptionId = 8,
                            RefillOccurrence = "Bi-weekly",
                            StartDate = new DateTime(2024, 1, 25, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6523),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6521),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2024, 12, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6525),
                            MemberId = "MEMBER9",
                            MemberLocation = "Dallas",
                            PrescriptionId = 9,
                            RefillOccurrence = "Weekly",
                            StartDate = new DateTime(2023, 12, 26, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6525),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6524),
                            SubscriptionStatus = 1
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2024, 11, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6527),
                            MemberId = "MEMBER10",
                            MemberLocation = "San Jose",
                            PrescriptionId = 10,
                            RefillOccurrence = "Monthly",
                            StartDate = new DateTime(2023, 11, 26, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6528),
                            SubscriptionDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6526),
                            SubscriptionStatus = 1
                        });
                });

            modelBuilder.Entity("DrugsAPI_New.Models.RefillOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("QuantityStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefillDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RefillOrderItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefillOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6553),
                            MemberId = "MEMBER1",
                            OrderDate = new DateTime(2024, 9, 16, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6550),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 17, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6552),
                            RefillOrderItemId = 1,
                            StartDate = new DateTime(2024, 9, 16, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6552),
                            Status = "Shipped",
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6557),
                            MemberId = "MEMBER2",
                            OrderDate = new DateTime(2024, 9, 17, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6555),
                            QuantityStatus = "Low",
                            RefillDate = new DateTime(2024, 9, 18, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6556),
                            RefillOrderItemId = 2,
                            StartDate = new DateTime(2024, 9, 17, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6557),
                            Status = "Processing",
                            SubscriptionId = 2
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6561),
                            MemberId = "MEMBER3",
                            OrderDate = new DateTime(2024, 9, 18, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6559),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 19, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6560),
                            RefillOrderItemId = 3,
                            StartDate = new DateTime(2024, 9, 18, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6560),
                            Status = "Pending",
                            SubscriptionId = 3
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6564),
                            MemberId = "MEMBER4",
                            OrderDate = new DateTime(2024, 9, 19, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6562),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 20, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6563),
                            RefillOrderItemId = 4,
                            StartDate = new DateTime(2024, 9, 19, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6564),
                            Status = "Shipped",
                            SubscriptionId = 4
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6567),
                            MemberId = "MEMBER5",
                            OrderDate = new DateTime(2024, 9, 20, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6565),
                            QuantityStatus = "Low",
                            RefillDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6566),
                            RefillOrderItemId = 5,
                            StartDate = new DateTime(2024, 9, 20, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6567),
                            Status = "Processing",
                            SubscriptionId = 5
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2024, 10, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6570),
                            MemberId = "MEMBER6",
                            OrderDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6569),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 22, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6569),
                            RefillOrderItemId = 6,
                            StartDate = new DateTime(2024, 9, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6570),
                            Status = "Pending",
                            SubscriptionId = 6
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2024, 11, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6574),
                            MemberId = "MEMBER7",
                            OrderDate = new DateTime(2024, 9, 22, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6572),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 23, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6573),
                            RefillOrderItemId = 7,
                            StartDate = new DateTime(2024, 9, 22, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6573),
                            Status = "Scheduled",
                            SubscriptionId = 7
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2024, 11, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6577),
                            MemberId = "MEMBER8",
                            OrderDate = new DateTime(2024, 9, 23, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6575),
                            QuantityStatus = "Low",
                            RefillDate = new DateTime(2024, 9, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6576),
                            RefillOrderItemId = 8,
                            StartDate = new DateTime(2024, 9, 23, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6577),
                            Status = "Scheduled",
                            SubscriptionId = 8
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2024, 11, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6580),
                            MemberId = "MEMBER9",
                            OrderDate = new DateTime(2024, 9, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6578),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 25, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6579),
                            RefillOrderItemId = 9,
                            StartDate = new DateTime(2024, 9, 24, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6580),
                            Status = "Scheduled",
                            SubscriptionId = 9
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2024, 11, 21, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6584),
                            MemberId = "MEMBER10",
                            OrderDate = new DateTime(2024, 9, 25, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6582),
                            QuantityStatus = "Sufficient",
                            RefillDate = new DateTime(2024, 9, 26, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6582),
                            RefillOrderItemId = 10,
                            StartDate = new DateTime(2024, 9, 25, 14, 16, 11, 604, DateTimeKind.Local).AddTicks(6583),
                            Status = "Scheduled",
                            SubscriptionId = 10
                        });
                });

            modelBuilder.Entity("DrugsAPI_New.Models.RefillOrderLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RefillOrderId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefillOrderLineItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrugId = 1,
                            Quantity = 30,
                            RefillOrderId = 1,
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 2,
                            DrugId = 2,
                            Quantity = 60,
                            RefillOrderId = 2,
                            SubscriptionId = 2
                        },
                        new
                        {
                            Id = 3,
                            DrugId = 3,
                            Quantity = 20,
                            RefillOrderId = 3,
                            SubscriptionId = 3
                        },
                        new
                        {
                            Id = 4,
                            DrugId = 4,
                            Quantity = 90,
                            RefillOrderId = 4,
                            SubscriptionId = 4
                        },
                        new
                        {
                            Id = 5,
                            DrugId = 5,
                            Quantity = 60,
                            RefillOrderId = 5,
                            SubscriptionId = 5
                        },
                        new
                        {
                            Id = 6,
                            DrugId = 6,
                            Quantity = 30,
                            RefillOrderId = 6,
                            SubscriptionId = 6
                        },
                        new
                        {
                            Id = 7,
                            DrugId = 7,
                            Quantity = 30,
                            RefillOrderId = 7,
                            SubscriptionId = 7
                        },
                        new
                        {
                            Id = 8,
                            DrugId = 8,
                            Quantity = 30,
                            RefillOrderId = 8,
                            SubscriptionId = 8
                        },
                        new
                        {
                            Id = 9,
                            DrugId = 9,
                            Quantity = 30,
                            RefillOrderId = 9,
                            SubscriptionId = 9
                        },
                        new
                        {
                            Id = 10,
                            DrugId = 10,
                            Quantity = 1,
                            RefillOrderId = 10,
                            SubscriptionId = 10
                        });
                });

            modelBuilder.Entity("DrugsAPI_New.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
